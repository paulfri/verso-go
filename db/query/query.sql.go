// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: query.sql

package query

import (
	"context"
)

const getFeed = `-- name: GetFeed :one
SELECT id, title, url FROM feeds
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetFeed(ctx context.Context, id int32) (Feed, error) {
	row := q.db.QueryRowContext(ctx, getFeed, id)
	var i Feed
	err := row.Scan(&i.ID, &i.Title, &i.Url)
	return i, err
}

const listFeeds = `-- name: ListFeeds :many
SELECT id, title, url FROM feeds
`

func (q *Queries) ListFeeds(ctx context.Context) ([]Feed, error) {
	rows, err := q.db.QueryContext(ctx, listFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Feed
	for rows.Next() {
		var i Feed
		if err := rows.Scan(&i.ID, &i.Title, &i.Url); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
