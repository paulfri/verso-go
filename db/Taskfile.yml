version: "3"

vars:
  GOOSE_DBSTRING:
    sh: go run ../main.go config goose
  DATABASE_URL:
    sh: go run ../main.go config database
  DATABASE_NAME:
    sh: go run ../main.go config dbname

env:
  GOOSE_DRIVER: postgres
  GOOSE_DBSTRING: "{{ .GOOSE_DBSTRING }}"
  PGUSER: postgres
  PGPASSWORD: postgres

tasks:
  compile:
    desc: Generate Go code from SQL queries.
    sources:
      - sqlc.yaml
      - "./migrate/*.sql"
      - "./sql/*.sql"
    cmds:
      - sqlc generate

  compile:watch:
    desc: Watch for SQL query changes and recompile.
    cmds:
      - wgo -file '.sql$' sqlc generate

  drop:
    desc: Drop the database. Irreversible.
    dir: ./migrate
    ignore_error: true
    preconditions:
      - sh: '[ "$VERSO_ENV" != "production" ]'
        msg: "Command cannot be run in production."
    cmds:
      # TODO: Parameterized arguments. Can't add/drop with full URL.
      - psql --host=localhost --command 'drop database {{.DATABASE_NAME}}';

  create:
    desc: Create the database.
    dir: ./migrate
    cmds:
      # TODO: Parameterized arguments. Can't add/drop with full URL.
      - psql --host=localhost --command 'create database {{.DATABASE_NAME}};'

  seed:
    desc: Seed the database with fixture data.
    dir: ..
    cmds:
      # First command disables reader ID trigger to ensure snapshot consistency.
      # Probably a better solution for this.
      - >-
        psql {{.DATABASE_URL}} --quiet --output=/dev/null
        --command "alter table rss.items disable trigger all"
        --file db/seed.sql

  seed:dump:
    desc: Dumps the database to a seed file.
    dir: ..
    cmds:
      - pg_dump {{.DATABASE_URL}} --data-only --exclude-table=goose_db_version > db/seed.sql

  gen:
    desc: Generate a new migration.
    dir: ./migrate
    cmds:
      - goose create {{.CLI_ARGS}} sql

  migrate:
    desc: Migrate to the latest version.
    dir: ./migrate
    cmds:
      - goose up

  migrate:lint:
    desc: Lint migrations.
    dir: ./migrate
    cmds:
      - squawk *.sql

  rollback:
    desc: Roll back the last migration. Irreversible.
    dir: ./migrate
    cmds:
      - goose down

  redo:
    desc: Roll back and reapply the last migration.
    dir: ./migrate
    cmds:
      - goose redo

  reset:
    desc: Roll back and reapply all migrations.
    dir: ./migrate
    cmds:
      - task: drop
      - task: create
      - task: migrate
      - task: seed

  status:
    desc: Show migration status.
    dir: ./migrate
    cmds:
      - goose status
